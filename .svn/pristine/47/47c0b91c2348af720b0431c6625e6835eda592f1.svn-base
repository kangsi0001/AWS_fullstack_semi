package com.kseolha.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kseolha.domain.FriendVO;
import com.kseolha.service.FriendService;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@RequestMapping("/friend")
@Controller
@Log4j
@AllArgsConstructor
public class FriendController {
	private FriendService friendService;


	//팔로우   4/10일 통과
	@PostMapping(value = "/follow", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public FriendVO follow(@RequestBody FriendVO vo) {
	    log.info("follow : " + vo);

	    friendService.follow(vo);

	    return vo;
	}
	
	// 언팔로우 1    4/10일 통과
	@PostMapping("/unfollow/{following}/{followed}")
	@ResponseBody
	public String unfollow(@PathVariable("following") String following, @PathVariable("followed") String followed) {
	    friendService.unfollow(following, followed);
	    return "redirect:/followers/" + followed;
	}
	
	// 언팔로우 2
//	@PostMapping(value = "/unfollow/{following}/{followed}", produces = MediaType.APPLICATION_JSON_VALUE)
//	@ResponseBody
//	public Map<String, String> unfollow(@PathVariable("following") String following, @PathVariable("followed") String followed) {
//	    friendService.unfollow(following, followed);
//	    Map<String, String> result = new HashMap<>();
//	    result.put("status", "success");
//	    return result;
//	}

     // 팔로워 목록 4/10일 통과
	 @GetMapping(value = "/followers/{following}", produces = MediaType.APPLICATION_JSON_VALUE)
	 @ResponseBody
	    public List<FriendVO> getFollowers(@PathVariable("following") String following) {
	        List<FriendVO> followers = friendService.getFollowers(following);
	        return followers;
	    }
	
	// 팔로잉 목록 4/10일 통과	 
	@GetMapping(value = "/followings/{followed}", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public List<FriendVO> getFollowings(@PathVariable("followed") String followed) {
		List<FriendVO> followings = friendService.getFollowings(followed);
		
		return followings;
	}
	
	// 맞팔 체크 4/10일 통과
	@PostMapping(value = "/selectFriend", produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseBody
    public boolean selectFriend(@RequestParam("following") String following, @RequestParam("followed") String followed) {
        return friendService.selectFriend(following, followed);
    }
//	// 친구 차단
//	@PostMapping("/block/{fno}")
//	public String block(@PathVariable("fno") Long fno) {
//		FriendVO vo = friendService.getFriend(fno);
//		friendService.block(fno);
//		return "redirect:/followers/" + vo.getFollowed();
//	}
}
