package com.kseolha.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kseolha.domain.ClubVO;
import com.kseolha.domain.MemberVO;
import com.kseolha.domain.MessageVO;
import com.kseolha.mapper.MemberMapper;
import com.kseolha.service.ClubService;
import com.kseolha.service.MemberService;
import com.kseolha.service.MemberServiceImpl;
import com.kseolha.service.MessageService;

import lombok.Data;
import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("message/*")
@Data
@Log4j
public class MessageController {
	
	private final MessageService messageService;
	private MemberService memberService;
	private ClubService clubService;
	
	@GetMapping("direct")
	public void direct(){
	};
	
	@PostMapping("new") @ResponseBody
	public MessageVO send(@RequestBody MessageVO vo){
		log.info(vo);
		messageService.send(vo);
		return vo;
	}
	
	@GetMapping("{receiver}/r/{sender}/s") @ResponseBody
	public List<MessageVO> chat(@PathVariable String receiver, @PathVariable String sender){
		log.info(sender);
		log.info(receiver);
		
		List<MessageVO> chatlist = messageService.chat(receiver, sender);
		
		return messageService.chat(receiver, sender);
	}
	
	@GetMapping("{receiver}/uncheck") @ResponseBody
	public List<MessageVO> uncheckedList(@PathVariable String id){
		log.info(id);
		return messageService.uncheckedList(id);
	}
	
	@PutMapping("check/{mno}") @ResponseBody
	public Boolean receive(@PathVariable Long mno){
		log.info(mno);
		return messageService.receive(mno);
	}
	
	@DeleteMapping("delete/{mno}") @ResponseBody
	public Boolean remove(@PathVariable Long mno) {
		log.info(mno);
		return messageService.remove(mno);
	}
	
}
